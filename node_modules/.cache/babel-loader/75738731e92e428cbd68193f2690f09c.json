{"ast":null,"code":"var _jsxFileName = \"/Users/linoyhorvat/Documents/bootcamp/Git/Projects/MatchFinding/src/App.js\";\nimport React, { Component } from \"react\";\nimport \"./App.css\";\nimport Avatar from \"./componenets/Avatar\";\nimport Input from \"./componenets/Input\";\nimport avatarApi from \"./api\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass App extends Component {\n  constructor() {\n    super(...arguments);\n    this.state = {\n      data: [],\n      name: \"\",\n      imgUrl: \"\",\n      update: \"\"\n    };\n\n    this.handleCreate = async () => {\n      try {\n        let dataCopy = [...this.state.data];\n        const newAvatar = {\n          name: this.state.name,\n          imgUrl: this.state.imgUrl\n        };\n        await avatarApi.post(\"/avatars/\", newAvatar);\n        dataCopy.push(newAvatar);\n        this.setState({\n          data: dataCopy\n        });\n      } catch (error) {}\n    };\n\n    this.handleDelete = async id => {\n      try {\n        const dataCopy = [...this.state.data];\n        const filteredData = dataCopy.filter(obj => obj.id !== id);\n        await avatarApi.delete(`/avatars/${id}`);\n        this.setState({\n          data: filteredData\n        });\n      } catch (error) {\n        console.log(error.message);\n      }\n    };\n\n    this.handleUpdate = async (id, value) => {\n      const dataCopy = [...this.state.data];\n      let objIdx = dataCopy.findIndex(element => {\n        return element.id === id;\n      });\n      const updatedItem = { ...dataCopy[objIdx],\n        name: value\n      };\n      dataCopy[objIdx] = updatedItem;\n      await avatarApi.put(`/avatars/${id}`, updatedItem);\n      this.setState({\n        data: dataCopy\n      });\n    };\n\n    this.handleInput = (objProp, e) => {\n      this.setState({\n        [objProp]: e\n      });\n    };\n\n    this.displayDataFromState = () => {\n      const {\n        data\n      } = this.state;\n      return data.map(obj => {\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(Avatar, {\n            Delete: () => {\n              this.handleDelete(obj.id);\n            },\n            Update: () => {\n              this.handleUpdate(obj.id, this.state.update);\n            },\n            name: obj.name,\n            imgUrl: obj.imgUrl\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 11\n          }, this), /*#__PURE__*/_jsxDEV(Input, {\n            onChange: e => {\n              this.handleInput(\"update\", e.target.value);\n            },\n            label: \"Update\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 11\n          }, this)]\n        }, obj.id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 9\n        }, this);\n      });\n    };\n  }\n\n  async componentDidMount() {\n    const {\n      data\n    } = await avatarApi.get(\"avatars\");\n    this.setState({\n      data\n    });\n  }\n\n  render() {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => {\n          this.handleInput(\"name\", e.target.value);\n        },\n        label: \"name\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Input, {\n        onChange: e => {\n          this.handleInput(\"imgUrl\", e.target.value);\n        },\n        label: \"imgUrl\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: this.handleCreate,\n        children: \"Create\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this), this.displayDataFromState()]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this);\n  }\n\n}\n\nexport default App;","map":{"version":3,"sources":["/Users/linoyhorvat/Documents/bootcamp/Git/Projects/MatchFinding/src/App.js"],"names":["React","Component","Avatar","Input","avatarApi","App","state","data","name","imgUrl","update","handleCreate","dataCopy","newAvatar","post","push","setState","error","handleDelete","id","filteredData","filter","obj","delete","console","log","message","handleUpdate","value","objIdx","findIndex","element","updatedItem","put","handleInput","objProp","e","displayDataFromState","map","target","componentDidMount","get","render"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAO,WAAP;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,OAAOC,KAAP,MAAkB,qBAAlB;AACA,OAAOC,SAAP,MAAsB,OAAtB;;;AAEA,MAAMC,GAAN,SAAkBJ,SAAlB,CAA4B;AAAA;AAAA;AAAA,SAC1BK,KAD0B,GAClB;AAAEC,MAAAA,IAAI,EAAE,EAAR;AAAYC,MAAAA,IAAI,EAAE,EAAlB;AAAsBC,MAAAA,MAAM,EAAE,EAA9B;AAAkCC,MAAAA,MAAM,EAAC;AAAzC,KADkB;;AAAA,SAO1BC,YAP0B,GAOX,YAAY;AACzB,UAAI;AACF,YAAIC,QAAQ,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWC,IAAf,CAAf;AACA,cAAMM,SAAS,GAAG;AAChBL,UAAAA,IAAI,EAAE,KAAKF,KAAL,CAAWE,IADD;AAEhBC,UAAAA,MAAM,EAAE,KAAKH,KAAL,CAAWG;AAFH,SAAlB;AAIA,cAAML,SAAS,CAACU,IAAV,CAAe,WAAf,EAA4BD,SAA5B,CAAN;AACAD,QAAAA,QAAQ,CAACG,IAAT,CAAcF,SAAd;AACA,aAAKG,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAEK;AAAR,SAAd;AACD,OATD,CASE,OAAOK,KAAP,EAAc,CAAE;AACnB,KAlByB;;AAAA,SAoB1BC,YApB0B,GAoBX,MAAOC,EAAP,IAAc;AAC3B,UAAI;AACF,cAAMP,QAAQ,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWC,IAAf,CAAjB;AACA,cAAMa,YAAY,GAAGR,QAAQ,CAACS,MAAT,CAAiBC,GAAD,IAASA,GAAG,CAACH,EAAJ,KAAWA,EAApC,CAArB;AACA,cAAMf,SAAS,CAACmB,MAAV,CAAkB,YAAWJ,EAAG,EAAhC,CAAN;AACA,aAAKH,QAAL,CAAc;AAAET,UAAAA,IAAI,EAAEa;AAAR,SAAd;AACD,OALD,CAKE,OAAOH,KAAP,EAAc;AACdO,QAAAA,OAAO,CAACC,GAAR,CAAYR,KAAK,CAACS,OAAlB;AACD;AACF,KA7ByB;;AAAA,SA+B1BC,YA/B0B,GA+BX,OAAOR,EAAP,EAAWS,KAAX,KAAqB;AAClC,YAAMhB,QAAQ,GAAG,CAAC,GAAG,KAAKN,KAAL,CAAWC,IAAf,CAAjB;AACA,UAAIsB,MAAM,GAAGjB,QAAQ,CAACkB,SAAT,CAAoBC,OAAD,IAAa;AAC3C,eAAOA,OAAO,CAACZ,EAAR,KAAeA,EAAtB;AACD,OAFY,CAAb;AAGA,YAAMa,WAAW,GAAG,EAClB,GAAGpB,QAAQ,CAACiB,MAAD,CADO;AAElBrB,QAAAA,IAAI,EAAEoB;AAFY,OAApB;AAIAhB,MAAAA,QAAQ,CAACiB,MAAD,CAAR,GAAmBG,WAAnB;AACA,YAAM5B,SAAS,CAAC6B,GAAV,CAAe,YAAWd,EAAG,EAA7B,EAAgCa,WAAhC,CAAN;AACA,WAAKhB,QAAL,CAAc;AAAET,QAAAA,IAAI,EAAEK;AAAR,OAAd;AACD,KA3CyB;;AAAA,SA6C1BsB,WA7C0B,GA6CZ,CAACC,OAAD,EAAUC,CAAV,KAAgB;AAC5B,WAAKpB,QAAL,CAAc;AAAE,SAACmB,OAAD,GAAWC;AAAb,OAAd;AACD,KA/CyB;;AAAA,SAiD1BC,oBAjD0B,GAiDH,MAAM;AAC3B,YAAM;AAAE9B,QAAAA;AAAF,UAAW,KAAKD,KAAtB;AACA,aAAOC,IAAI,CAAC+B,GAAL,CAAUhB,GAAD,IAAS;AACvB,4BACE;AAAA,kCACE,QAAC,MAAD;AACE,YAAA,MAAM,EAAE,MAAM;AACZ,mBAAKJ,YAAL,CAAkBI,GAAG,CAACH,EAAtB;AACD,aAHH;AAIE,YAAA,MAAM,EAAE,MAAM;AACZ,mBAAKQ,YAAL,CAAkBL,GAAG,CAACH,EAAtB,EAA0B,KAAKb,KAAL,CAAWI,MAArC;AACD,aANH;AAOE,YAAA,IAAI,EAAEY,GAAG,CAACd,IAPZ;AAQE,YAAA,MAAM,EAAEc,GAAG,CAACb;AARd;AAAA;AAAA;AAAA;AAAA,kBADF,eAWE,QAAC,KAAD;AACE,YAAA,QAAQ,EAAG2B,CAAD,IAAO;AACf,mBAAKF,WAAL,CAAiB,QAAjB,EAA2BE,CAAC,CAACG,MAAF,CAASX,KAApC;AACD,aAHH;AAIE,YAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,kBAXF;AAAA,WAAUN,GAAG,CAACH,EAAd;AAAA;AAAA;AAAA;AAAA,gBADF;AAoBD,OArBM,CAAP;AAsBD,KAzEyB;AAAA;;AAGH,QAAjBqB,iBAAiB,GAAG;AACxB,UAAM;AAAEjC,MAAAA;AAAF,QAAW,MAAMH,SAAS,CAACqC,GAAV,CAAc,SAAd,CAAvB;AACA,SAAKzB,QAAL,CAAc;AAAET,MAAAA;AAAF,KAAd;AACD;;AAqEDmC,EAAAA,MAAM,GAAG;AACP,wBACE;AAAA,8BACE,QAAC,KAAD;AACE,QAAA,QAAQ,EAAGN,CAAD,IAAO;AACf,eAAKF,WAAL,CAAiB,MAAjB,EAAyBE,CAAC,CAACG,MAAF,CAASX,KAAlC;AACD,SAHH;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cADF,eAOE,QAAC,KAAD;AACE,QAAA,QAAQ,EAAGQ,CAAD,IAAO;AACf,eAAKF,WAAL,CAAiB,QAAjB,EAA2BE,CAAC,CAACG,MAAF,CAASX,KAApC;AACD,SAHH;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,cAPF,eAaE;AAAQ,QAAA,OAAO,EAAE,KAAKjB,YAAtB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAbF,EAcG,KAAK0B,oBAAL,EAdH;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAkBD;;AA9FyB;;AAiG5B,eAAehC,GAAf","sourcesContent":["import React, { Component } from \"react\";\r\nimport \"./App.css\";\r\nimport Avatar from \"./componenets/Avatar\";\r\nimport Input from \"./componenets/Input\";\r\nimport avatarApi from \"./api\";\r\n\r\nclass App extends Component {\r\n  state = { data: [], name: \"\", imgUrl: \"\" ,update:\"\"};\r\n\r\n  async componentDidMount() {\r\n    const { data } = await avatarApi.get(\"avatars\");\r\n    this.setState({ data });\r\n  }\r\n  handleCreate = async () => {\r\n    try {\r\n      let dataCopy = [...this.state.data];\r\n      const newAvatar = {\r\n        name: this.state.name,\r\n        imgUrl: this.state.imgUrl,\r\n      };\r\n      await avatarApi.post(\"/avatars/\", newAvatar);\r\n      dataCopy.push(newAvatar);\r\n      this.setState({ data: dataCopy });\r\n    } catch (error) {}\r\n  };\r\n\r\n  handleDelete = async (id) => {\r\n    try {\r\n      const dataCopy = [...this.state.data];\r\n      const filteredData = dataCopy.filter((obj) => obj.id !== id);\r\n      await avatarApi.delete(`/avatars/${id}`);\r\n      this.setState({ data: filteredData });\r\n    } catch (error) {\r\n      console.log(error.message);\r\n    }\r\n  };\r\n\r\n  handleUpdate = async (id, value) => {\r\n    const dataCopy = [...this.state.data];\r\n    let objIdx = dataCopy.findIndex((element) => {\r\n      return element.id === id;\r\n    });\r\n    const updatedItem = {\r\n      ...dataCopy[objIdx],\r\n      name: value,\r\n    };\r\n    dataCopy[objIdx] = updatedItem;\r\n    await avatarApi.put(`/avatars/${id}`, updatedItem);\r\n    this.setState({ data: dataCopy });\r\n  };\r\n\r\n  handleInput = (objProp, e) => {\r\n    this.setState({ [objProp]: e });\r\n  };\r\n\r\n  displayDataFromState = () => {\r\n    const { data } = this.state;\r\n    return data.map((obj) => {\r\n      return (\r\n        <div key={obj.id}>\r\n          <Avatar\r\n            Delete={() => {\r\n              this.handleDelete(obj.id);\r\n            }}\r\n            Update={() => {\r\n              this.handleUpdate(obj.id, this.state.update);\r\n            }}\r\n            name={obj.name}\r\n            imgUrl={obj.imgUrl}\r\n          />\r\n          <Input\r\n            onChange={(e) => {\r\n              this.handleInput(\"update\", e.target.value);\r\n            }}\r\n            label=\"Update\"\r\n          />\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  render() {\r\n    return (\r\n      <div>\r\n        <Input\r\n          onChange={(e) => {\r\n            this.handleInput(\"name\", e.target.value);\r\n          }}\r\n          label=\"name\"\r\n        />\r\n        <Input\r\n          onChange={(e) => {\r\n            this.handleInput(\"imgUrl\", e.target.value);\r\n          }}\r\n          label=\"imgUrl\"\r\n        />\r\n        <button onClick={this.handleCreate}>Create</button>\r\n        {this.displayDataFromState()}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default App;\r\n"]},"metadata":{},"sourceType":"module"}